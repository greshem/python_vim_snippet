snippet ceph_auth
	auth add <entity> {<caps> [<caps>...]}   
	auth caps <entity> <caps> [<caps>...]
	auth del <entity>
	auth export {<entity>}   
	auth get <entity>
	auth get-key <entity>
	auth get-or-create <entity> {<caps> [<caps>...]} 
	auth get-or-create-key <entity> {<caps> [<caps>...]} 
	auth import  
	auth ls  
	auth print-key <entity>  
	auth print_key <entity>  
	auth rm <entity> 

snippet ceph_config
	config set <key> <value>  
	config-key del <key>  
	config-key dump   
	config-key exists <key>   
	config-key get <key>  
	config-key ls 
	config-key rm <key>   
	config-key set <key> {<val>}  

snippet ceph_fs
	fs add_data_pool <fs_name> <pool> 
	fs authorize <filesystem> <entity> <caps> [<caps>...] 
	fs dump {<int[0-]>}   
	fs flag set enable_multiple <val> {--yes-i-really-mean-it}
	fs get <fs_name>  
	fs ls 
	fs new <fs_name> <metadata> <data> {--force} {--allow-dangerous-metadata-overlay} 
	fs reset <fs_name> {--yes-i-really-mean-it}   
	fs rm <fs_name> {--yes-i-really-mean-it}  
	fs rm_data_pool <fs_name> <pool>  
	fs set <fs_name> max_mds|max_file_size|allow_new_snaps|inline_data|cluster_down|allow_
	 multimds|allow_dirfrags|balancer|standby_count_wanted <val> {<confirm>}  
	fs set-default <fs_name>  
	fs status {<fs>}  


snippet ceph_mds
	mds compat rm_compat <int[0-]>
	mds compat rm_incompat <int[0-]>  
	mds compat show   
	mds count-metadata <property> 
	mds deactivate <who>  
	mds fail <who>
	mds metadata {<who>}  
	mds repaired <rank>   
	mds rm <int[0-]>  
	mds rmfailed <who> {<confirm>}
	mds set_state <int[0-]> <int[0-20]>   
	mds stat  
	mds versions  
snippet ceph_mgr
	mgr count-metadata <property> 
	mgr dump {<int[0-]>}  
	mgr fail <who>
	mgr metadata {<id>}   
	mgr module disable <module>   
	mgr module enable <module> {--force}  
	mgr module ls 
	mgr versions  
snippet ceph_mon
	mon add <name> <IPaddr[:port]>
	mon compact   
	mon count-metadata <property> 
	mon dump {<int[0-]>}  
	mon feature ls {--with-value} 
	mon feature set <feature_name> {--yes-i-really-mean-it}   
	mon getmap {<int[0-]>}
	mon metadata {<id>}   
	mon remove <name> 
	mon rm <name> 
	mon scrub 
	mon stat  
	mon sync force {--yes-i-really-mean-it} {--i-know-what-i-am-doing}
	mon versions  
	mon_status

snippet ceph_osd_crush
	osd crush add <osdname (id|osd.id)> <float[0.0-]> <args> [<args>...]  
	osd crush add-bucket <name> <type>
	osd crush class ls
	osd crush class ls-osd <class>
	osd crush class rename <srcname> <dstname>
	osd crush create-or-move <osdname (id|osd.id)> <float[0.0-]> <args> [<args>...] 
	osd crush dump
	osd crush get-tunable straw_calc_version  
	osd crush link <name> <args> [<args>...]  
	osd crush ls <node>   
	osd crush move <name> <args> [<args>...]  
	osd crush remove <name> {<ancestor>}  
	osd crush rename-bucket <srcname> <dstname>   
	osd crush reweight <name> <float[0.0-]>   
	osd crush reweight-all
	osd crush reweight-subtree <name> <float[0.0-]>   
	osd crush rm <name> {<ancestor>}  
	osd crush rm-device-class <ids> [<ids>...]
	osd crush rule create-erasure <name> {<profile>}  
	osd crush rule create-replicated <name> <root> <type> {<class>}   
	osd crush rule create-simple <name> <root> <type> {firstn|indep}  
	osd crush rule dump {<name>}  
	osd crush rule ls 
	osd crush rule ls-by-class <class>
	osd crush rule rename <srcname> <dstname> 
	osd crush rule rm <name>  
	osd crush set <osdname (id|osd.id)> <float[0.0-]> <args> [<args>...]  
	osd crush set {<int>} 
	osd crush set-device-class <class> <ids> [<ids>...]   
	osd crush set-tunable straw_calc_version <int>
	osd crush show-tunables   
	osd crush swap-bucket <source> <dest> {--yes-i-really-mean-it}
	osd crush tree {--show-shadow}
	osd crush tunables legacy|argonaut|bobtail|firefly|hammer|jewel|optimal|default 
	osd crush unlink <name> {<ancestor>}  
	osd crush weight-set create <poolname> flat|positional
	osd crush weight-set create-compat
	osd crush weight-set dump 
	osd crush weight-set ls   
	osd crush weight-set reweight <poolname> <item> <float[0.0-]> [<float[0.0-]>...] 
	osd crush weight-set reweight-compat <item> <float[0.0-]> [<float[0.0-]>...]  
	osd crush weight-set rm <poolname>
	osd crush weight-set rm-compat

snippet ceph_osd_pool
	osd pool application disable <poolname> <app> {--yes-i-really-mean-it}
	osd pool application enable <poolname> <app> {--yes-i-really-mean-it} 
	osd pool application get {<poolname>} {<app>} {<key>} 
	osd pool application rm <poolname> <app> <key>
	osd pool application set <poolname> <app> <key> <value>   
	osd pool create <poolname> <int[0-]> {<int[0-]>} {replicated|erasure} {<erasure_code_ 
	 profile>} {<rule>} {<int>}   
	osd pool delete <poolname> {<poolname>} {<sure>}  
	osd pool get <poolname> size|min_size|crash_replay_interval|pg_num|pgp_num|crush_rule|
	 hashpspool|nodelete|nopgchange|nosizechange|write_fadvise_dontneed|noscrub|nodeep-scrub| 
	 hit_set_type|hit_set_period|hit_set_count|hit_set_fpp|use_gmt_hitset|auid|target_max_
	 objects|target_max_bytes|cache_target_dirty_ratio|cache_target_dirty_high_ratio|cache_   
	 target_full_ratio|cache_min_flush_age|cache_min_evict_age|erasure_code_profile|min_read_ 
	 recency_for_promote|all|min_write_recency_for_promote|fast_read|hit_set_grade_decay_ 
	 rate|hit_set_search_last_n|scrub_min_interval|scrub_max_interval|deep_scrub_interval|
	 recovery_priority|recovery_op_priority|scrub_priority|compression_mode|compression_  
	 algorithm|compression_required_ratio|compression_max_blob_size|compression_min_blob_ 
	 size|csum_type|csum_min_block|csum_max_block 

	osd pool get-quota <poolname> 
	osd pool ls {detail}  
	osd pool mksnap <poolname> <snap> 
	osd pool rename <poolname> <poolname> 
	osd pool rm <poolname> {<poolname>} {<sure>}  
	osd pool rmsnap <poolname> <snap> 
	osd pool stats {<name>}   

snippets ceph_pool_set
	osd pool set <poolname> size|min_size|crash_replay_interval|pg_num|pgp_num|crush_rule|hashpspool|nodelete|nopgchange|nosizechange|write_fadvise_dontneed|noscrub|nodeep-scrub| hit_set_type|hit_set_period|hit_set_count|hit_set_fpp|use_gmt_hitset|target_max_bytes|   target_max_objects|cache_target_dirty_ratio|cache_target_dirty_high_ratio|cache_target_full_ratio|cache_min_flush_age|cache_min_evict_age|auid|min_read_recency_for_promote|min_write_recency_for_promote|fast_read|hit_set_grade_decay_rate|hit_set_search_last_n|  scrub_min_interval|scrub_max_interval|deep_scrub_interval|recovery_priority|recovery_op_priority|scrub_priority|compression_mode|compression_algorithm|compression_required_ratio|compression_max_blob_size|compression_min_blob_size|csum_type|csum_min_block|csum_max_block|allow_ec_overwrites <val> {--yes-i-really-mean-it} 

	osd pool set-quota <poolname> max_objects|max_bytes <val> 
	


snippet ceph_pg
	pg cancel-force-backfill <pgid> [<pgid>...]   
	pg cancel-force-recovery <pgid> [<pgid>...]   
	pg debug unfound_objects_exist|degraded_pgs_exist 
	pg deep-scrub <pgid>  
	pg dump {all|summary|sum|delta|pools|osds|pgs|pgs_brief [all|summary|sum|delta|pools| 
	 osds|pgs|pgs_brief...]}  
	pg dump_json {all|summary|sum|pools|osds|pgs [all|summary|sum|pools|osds|pgs...]} 
	pg dump_pools_json
	pg dump_stuck {inactive|unclean|stale|undersized|degraded [inactive|unclean|stale|
	 undersized|degraded...]} {<int>} 
	pg force-backfill <pgid> [<pgid>...]  
	pg force-recovery <pgid> [<pgid>...]  
	pg getmap 
	pg ls {<int>} {<states> [<states>...]}
	pg ls-by-osd <osdname (id|osd.id)> {<int>} {<states> [<states>...]}   
	pg ls-by-pool <poolstr> {<states> [<states>...]}  
	pg ls-by-primary <osdname (id|osd.id)> {<int>} {<states> [<states>...]}   
	pg map <pgid> 
	pg repair <pgid>  
	pg scrub <pgid>   
	pg stat   

snippet ceph_osd_misc
	osd add-nodown <ids> [<ids>...]   
	osd add-noin <ids> [<ids>...] 
	osd add-noout <ids> [<ids>...]
	osd add-noup <ids> [<ids>...] 
	osd blacklist add|rm <EntityAddr> {<float[0.0-]>} 
	osd blacklist clear   
	osd blacklist ls  
	osd blocked-by
	osd count-metadata <property> 
	osd deep-scrub <who>  
	osd destroy <osdname (id|osd.id)> {--yes-i-really-mean-it}
	osd df {plain|tree}   
	osd down <ids> [<ids>...] 
	osd dump {<int[0-]>}  
	osd erasure-code-profile get <name>   
	osd erasure-code-profile ls   
	osd erasure-code-profile rm <name>
	osd erasure-code-profile set <name> {<profile> [<profile>...]}
	osd find <osdname (id|osd.id)>
	osd force-create-pg <pgid>
	osd getcrushmap {<int[0-]>}   
	osd getmap {<int[0-]>}
	osd getmaxosd 
	osd in <ids> [<ids>...]   
	osd last-stat-seq <osdname (id|osd.id)>   
	osd lost <osdname (id|osd.id)> {--yes-i-really-mean-it}   
	osd ls {<int[0-]>}
	osd ls-tree {<int[0-]>} {<name>}  
	osd lspools {<int>}   
	osd map <poolname> <objectname> {<nspace>}
	osd metadata {<osdname (id|osd.id)>}  
	osd new {<uuid>} {<osdname (id|osd.id)>}  
	osd ok-to-stop <ids> [<ids>...]   
	osd out <ids> [<ids>...]  
	osd pause 
	osd perf  
	osd pg-temp <pgid> {<osdname (id|osd.id)> [<osdname (id|osd.id)>...]} 
	osd pg-upmap <pgid> <osdname (id|osd.id)> [<osdname (id|osd.id)>...]  
	osd pg-upmap-items <pgid> <osdname (id|osd.id)> [<osdname (id|osd.id)>...]
	osd primary-affinity <osdname (id|osd.id)> <float[0.0-1.0]>   
	osd primary-temp <pgid> <osdname (id|osd.id)> 
	osd purge <osdname (id|osd.id)> {--yes-i-really-mean-it}  
	osd repair <who>  
	osd require-osd-release luminous  
	osd reweight <osdname (id|osd.id)> <float[0.0-1.0]>   
	osd reweight-by-pg {<int>} {<float>} {<int>} {<poolname> [<poolname>...]} 
	osd reweight-by-utilization {<int>} {<float>} {<int>} {--no-increasing}   
	osd reweightn <weights>   

snippet ceph_osd_rm
	osd rm <ids> [<ids>...]   
	osd rm-nodown <ids> [<ids>...]
	osd rm-noin <ids> [<ids>...]  
	osd rm-noout <ids> [<ids>...] 
	osd rm-noup <ids> [<ids>...]  
	osd rm-pg-upmap <pgid>
	osd rm-pg-upmap-items <pgid>  
	osd safe-to-destroy <ids> [<ids>...]  
	osd scrub <who>   

snippet ceph_osd_set
	osd set full|pause|noup|nodown|noout|noin|nobackfill|norebalance|norecover|noscrub|nodeep-scrub|notieragent|sortbitwise|recovery_deletes|require_jewel_osds|require_kraken_ 
	 osds 
	osd set-backfillfull-ratio <float[0.0-1.0]>   
	osd set-full-ratio <float[0.0-1.0]>   
	osd set-nearfull-ratio <float[0.0-1.0]>   
	osd set-require-min-compat-client <version> {--yes-i-really-mean-it}  
	osd setcrushmap {<int>}   
	osd setmaxosd <int[0-]>   
	osd stat  
	osd status {<bucket>} 
	osd test-reweight-by-pg {<int>} {<float>} {<int>} {<poolname> [<poolname>...]}
											  
	osd test-reweight-by-utilization {<int>} {<float>} {<int>} {--no-increasing}  
											  
snippet ceph_osd_tier
	osd tier add <poolname> <poolname> {--force-nonempty} 
	osd tier add-cache <poolname> <poolname> <int[0-]>
											  
	osd tier cache-mode <poolname> none|writeback|forward|readonly|readforward|proxy| 
	 readproxy {--yes-i-really-mean-it}   
	osd tier remove <poolname> <poolname> 
	osd tier remove-overlay <poolname>
	osd tier rm <poolname> <poolname> 
	osd tier rm-overlay <poolname>
	osd tier set-overlay <poolname> <poolname>
	osd tree {<int[0-]>} {up|down|in|out|destroyed [up|down|in|out|destroyed...]} 
	osd unpause   
	osd unset full|pause|noup|nodown|noout|noin|nobackfill|norebalance|norecover|noscrub| 
	 nodeep-scrub|notieragent 
	osd utilization   
	osd versions  

snippet ceph_misc
	df {detail}       
	features          
	fsid  
	health {detail}   
	heap dump|start_profiler|stop_profiler|release|stats  
	injectargs <injected_args> [<injected_args>...]       
	log <logtext> [<logtext>...]  
	log last {<int[1-]>} {debug|info|sec|warn|error} {*|cluster|audit}
	node ls {all|osd|mon|mds}     
	quorum enter|exit 
	quorum_status     
	report {<tags> [<tags>...]}   
	restful create-key <key_name> 
	restful create-self-signed-cert           
	restful delete-key <key_name> 
	restful list-keys 
	restful restart   
	service dump      
	service status    
	status
	tell <name (type.id)> <args> [<args>...]  
	time-sync-status  
	version           
	versions          
